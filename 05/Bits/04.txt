BOOL CALLBACK ClientDlgProc (HWND hDlg, UINT message,WPARAM wParam, LPARAM lParam)

{
	char marks[5][20] = {"图书信息","图书入库","销售查询","系统配置","系统退出"};
	HWND hToolbar;		//工具栏句柄
	u_int i;            //for 语句迭代器
	int ImgID[5];		//存放ImageList中的小图标标识
	HIMAGELIST him;		//ImageList类型数据，用来存放Image或者Icon，在本程序中使用它向工具栏添加图片
	u_long bkColor;		//存放系统默认颜色
	TBBUTTON tbs[5];
	HDC hdc;
	HDC memDC;
	BITMAP mBitmap;
	HBITMAP bmp;
	RECT rect;
	int Width;
	int Height;
	PAINTSTRUCT ps ;
	switch (message)        
	{
	case   WM_INITDIALOG : 
	   	 SetWindowPos(hDlg,HWND_TOP,100,100,0,0,SWP_SHOWWINDOW|SWP_NOSIZE);			//设定窗口的位置
		 /*向主界面设置工具栏*/
		 hToolbar = CreateWindowEx(WS_EX_APPWINDOW,TOOLBARCLASSNAME,"toolbar",WS_VISIBLE|WS_CHILD|CCS_TOP  ,0,0,120,120,hDlg,NULL,g_hInstance,NULL);
		 SendMessage(hToolbar,TB_BUTTONSTRUCTSIZE,sizeof(TBBUTTON),0);				//向空工具条传递按钮数据的大小的信息
		 him = ImageList_Create(24,24,ILC_COLOR24,5,0);
		 bkColor=GetSysColor(COLOR_3DFACE);										//获取系统背景色
		 ImageList_SetBkColor(him,bkColor);											//将图片的背景色设定为默认的背景色;
		 SendMessage(hToolbar,TB_SETIMAGELIST,0,(LPARAM)(HIMAGELIST)him);				//向工具条传递使用当前ImageList的信息
		 //以此图标装载入ImageList中。  
		  for(i=0;i<5;i++)
		  {
			ImgID[i]=ImageList_AddIcon(him,LoadIcon(g_hInstance,MAKEINTRESOURCE(IDI_ICON1+i)));
		  }
		 //将工具条按钮的基本属性依次装填
		 for(i = 0;i<5;i++)
		 {
			 tbs[i].iBitmap = ImgID[i];
			 tbs[i].iString = (int)marks[i];   //iString是一个PTR_INT类型数据，用来存放32位地址
			 tbs[i].fsStyle = TBSTYLE_BUTTON;
			 tbs[i].fsState = TBSTATE_ENABLED ;
		 }
		 //将工具指令与相应菜单栏的指令对应
		 tbs[0].idCommand = ID_BOOK_INFO;
		 tbs[1].idCommand = ID_BOOK_INPUT;
		 tbs[2].idCommand = ID_SALE_QUERY;
		 //工具条最后两个按钮的命令在"resource.h"中自行定义
		 tbs[3].idCommand = ID_TB_CONFIG;
		 tbs[4].idCommand = ID_TB_EXIT;	  
		SendMessage(hToolbar,TB_ADDBUTTONS,5,(LPARAM)(LPTBBUTTON)tbs);				//向工具条传递增添按钮的信息
		SendMessage(hToolbar,TB_SETBUTTONSIZE,0,MAKELONG(80,60));				//设置按钮大小
		SendMessage(hToolbar,TB_AUTOSIZE,0,0);										//根据工具栏和图片的情况，调整按钮大小
		return TRUE ;
	case  WM_COMMAND : 
		switch (LOWORD (wParam))
		{
			case ID_OPERATOR_M:
				if(g_level>1)
				{
					DialogBox(g_hInstance,MAKEINTRESOURCE(ID_DLG_OPERATOR_M),hDlg,Operator_M_Proc);
				}
				else
				{
					MessageBox(hDlg,"您无权进行此操作","权限等级限制",MB_ICONERROR);
				}
				break;
			case ID_BOOK_INFO:
				DialogBox(g_hInstance,MAKEINTRESOURCE(ID_DLG_BOOK_INFO),hDlg,Book_Info_Proc);
				break;
			case ID_PROVIDER_INFO:
				DialogBox(g_hInstance,MAKEINTRESOURCE(ID_DLG_PROVIDER_INFO),hDlg,Provider_Info_Proc);
				break;
			case ID_BOOK_KIND:
				DialogBox(g_hInstance,MAKEINTRESOURCE(ID_DLG_BOOK_KINDS),hDlg,Book_Kinds_Proc);
				break;
			case ID_CK_INFO:
				DialogBox(g_hInstance,MAKEINTRESOURCE(ID_DLG_STORE_INFO),hDlg,Store_Info_Proc);
				break;
			case ID_DESK_INFO:
				DialogBox(g_hInstance,MAKEINTRESOURCE(ID_DLG_DESK_INFO),hDlg,Desk_Info_Proc);
				break;
			case ID_BOOK_INPUT:
				DialogBox(g_hInstance,MAKEINTRESOURCE(ID_DLG_BOOK_INPUT),hDlg,Book_Input_Proc);
				break;
			case ID_INPUT_BACK:
				DialogBox(g_hInstance,MAKEINTRESOURCE(ID_DLG_BOOK_INPUT),hDlg,Book_Input_Back_Proc);
				break;
			case ID_BOOK_ADJUST:
				DialogBox(g_hInstance,MAKEINTRESOURCE(ID_DLG_BOOK_ADJUST),hDlg,Book_Adjust_Proc);
				break;
				break;
			case ID_SALE_M:
				DialogBox(g_hInstance,MAKEINTRESOURCE(ID_DLG_BOOK_SALE),hDlg,Book_Sale_Proc);
				break;
			case ID_SALE_BACK:
				DialogBox(g_hInstance,MAKEINTRESOURCE(ID_DLG_BOOK_SALE),hDlg,Book_Sale_Back_Proc);
				break;
			case ID_INPUT_QUERY:
				DialogBox(g_hInstance,MAKEINTRESOURCE(ID_DLG_QUERY),hDlg,Book_Input_Query_Proc);
				break;
			case ID_INPUT_BACK_QUERY:
				DialogBox(g_hInstance,MAKEINTRESOURCE(ID_DLG_QUERY),hDlg,Book_Input_Back_Query_Proc);
				break;
			case ID_SALE_QUERY:
				DialogBox(g_hInstance,MAKEINTRESOURCE(ID_DLG_QUERY),hDlg,Book_Sale_Query_Proc);
				break;
			case ID_SALE_BACK_QUERY:
				DialogBox(g_hInstance,MAKEINTRESOURCE(ID_DLG_QUERY),hDlg,Book_Sale_Back_Query_Proc);
				break;
			case ID_STOCK_QUERY:
				DialogBox(g_hInstance,MAKEINTRESOURCE(ID_DLG_STOCKQUERY),hDlg,Book_Stock_Query_Proc);
				break;
			case ID_TB_CONFIG:
				DialogBox(g_hInstance,MAKEINTRESOURCE(ID_DLG_CONFIG),hDlg,ConfigDlgProc );
				break;
			case ID_TB_EXIT:
				PostQuitMessage (0) ;
				break;

			case ID_EXIT:
				PostQuitMessage (0) ;
				break;
		}
	   return 1 ; 
       break ;
