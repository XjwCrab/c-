/**
 * 判断x是否是2的n次方,是2的n次方，返回1，否则返回0
 */
int if2n(int x)       
{
	int flag = 0;
	int n;
	int N = 1;   
	for(n = 1;n <= 11;n++)		//2的11次方是2048，游戏目标是达到2048
	{
		if(x == pow(2,n))       	//计算2的n次方
		{
			flag = 1;
			if(n>N)
				N = n;
			return flag;
		}
	}
	return flag;
}

 /**
 * 判断是否能够上移，可以上移，则返回1；不能移动，则返回0
 */
int ifup()
{
	int i,j;
	int flag = 0;           //定义标志变量，只有0或1
	for(j = 0;j < 4;j ++)
		for(i = 0;i < 3;i ++)
		{
            //如果上下两个格子相加是2的n次方，并且下面的格子中有数字
			if((if2n(BOX[i][j] + BOX[i+1][j]) == 1) && BOX[i+1][j])     
			{
				flag = 1;    //可以上移
			}
		}
		return flag;        //返回1表示可以上移，返回0表示不能上移
}

 /**
 * 判断是否能够下移，可以下移，则返回1；不能移动，则返回0
 */
int ifdown()
{
	int i,j;
	int flag = 0;
	for(j = 0;j < 4;j ++)
		for(i = 3;i > 0;i --)
		{
            //如果上下两个格子相加是2的n次方，并且上面的格子中有数字
			if((if2n(BOX[i][j] + BOX[i-1][j]) == 1) && BOX[i-1][j])     
			{
				flag = 1;       //可以下移
			}
		}
		return flag;            //返回1表示可以下移，返回0表示不能下移
}

 /**
 * 判断是否能够左移，可以左移，则返回1；不能移动，则返回0
 */
int ifleft()
{
	int i,j;
	int flag = 0;
	for(i = 0;i < 4;i ++)
		for(j = 0;j < 3;j ++)
		{
            //如果左右两个格子相加是2的n次方，并且右面的格子中有数
			if((if2n(BOX[i][j] + BOX[i][j+1]) == 1) && BOX[i][j+1])     
			{
				flag = 1;          //可以左移
			}
		}
		return flag;              //返回1表示可以左移，返回0表示不能左移
}

 /**
 * 判断是否能够右移，可以右移，则返回1；不能移动，则返回0
 */
int ifright()
{
	int i,j;
	int flag = 0;
	for(i = 0;i < 4;i ++)
		for(j = 3;j > 0;j --)
		{
            //如果左右两个格子相加是2的n次方，并且左面的格子中有数字
			if((if2n(BOX[i][j] + BOX[i][j-1]) == 1) && BOX[i][j-1])     
			{
				flag = 1;            //可以右移
			}
		}
		return flag;                 //返回1表示可以右移，返回0表示不能右移
}
